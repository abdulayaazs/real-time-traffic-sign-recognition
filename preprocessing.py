# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L2mbfocGN9DXLAnWiXPNGIoyB5XSqIO7
"""

# scripts/preprocessing.py

import os
import numpy as np
from PIL import Image
from tensorflow.keras.utils import to_categorical
from sklearn.model_selection import train_test_split

def load_data(data_dir, img_size=(32, 32), num_classes=43):
    data = []
    labels = []

    for i in range(num_classes):
        path = os.path.join(data_dir, str(i))
        images = os.listdir(path)

        for img in images:
            try:
                image = Image.open(os.path.join(path, img))
                image = image.resize(img_size)
                image = np.array(image)
                data.append(image)
                labels.append(i)
            except Exception as e:
                print(f"Error loading image {img}: {e}")

    data = np.array(data)
    labels = np.array(labels)

    # Normalize pixel values
    data = data / 255.0

    # One-hot encode labels
    labels = to_categorical(labels, num_classes=num_classes)

    return data, labels

def get_train_test_data(data_dir):
    X, y = load_data(data_dir)
    X_train, X_test, y_train, y_test = train_test_split(
        X, y, test_size=0.2, stratify=y, random_state=42
    )
    return X_train, X_test, y_train, y_test