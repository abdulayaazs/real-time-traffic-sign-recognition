# -*- coding: utf-8 -*-
"""evaluate_cnn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bGOjgeEKVzO37kMFny-BoRvTpUj0SFe4
"""

# scripts/evaluate_cnn.py

import tensorflow as tf
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import confusion_matrix, classification_report
import numpy as np
from preprocessing import get_train_test_data

def evaluate_model(model_path='../models/traffic_sign_model.h5', data_dir='../data/traffic_signs_dataset/'):
    X_train, X_test, y_train, y_test = get_train_test_data(data_dir)

    model = tf.keras.models.load_model(model_path)

    # Evaluate model
    loss, accuracy = model.evaluate(X_test, y_test)
    print(f"Test Loss: {loss:.4f}")
    print(f"Test Accuracy: {accuracy*100:.2f}%")

    # Predict
    y_pred = model.predict(X_test)
    y_pred_classes = np.argmax(y_pred, axis=1)
    y_true = np.argmax(y_test, axis=1)

    # Confusion Matrix
    cm = confusion_matrix(y_true, y_pred_classes)
    plt.figure(figsize=(10, 8))
    sns.heatmap(cm, annot=False, cmap='Blues')
    plt.title('Confusion Matrix')
    plt.xlabel('Predicted')
    plt.ylabel('True')
    plt.show()

    # Classification Report
    print(classification_report(y_true, y_pred_classes))

if __name__ == "__main__":
    evaluate_model()